worker_processes auto;

events {
    worker_connections 1024;
}

# Balanceo de conexiones TCP (API Server y canal interno de RKE2)
stream {
    # Formato de log para tr√°fico TCP
    log_format basic '$remote_addr [$time_local] $protocol '
                     '$status $bytes_sent $bytes_received '
                     '$session_time';

    access_log /var/log/nginx/rke2_api.log basic;

    # Balanceo para el API Server (puerto 6443)
    upstream rke2_api {
        least_conn;
        #Keepalive 32;
        server 10.0.1.41:6443;   # master1
        server 10.0.1.88:6443;  # master2
        server 10.0.1.68:6443;   # master3
    }

    # Balanceo para canal interno de RKE2 (puerto 9345)
    upstream rke2_control {
        least_conn;
        #Keepalive 32;
        server 10.0.1.41:9345;
        server 10.0.1.88:9345;
        server 10.0.1.68:9345;
    }

    server {
        listen 6443;
        proxy_pass rke2_api;
    }

    server {
        listen 9345;
        proxy_pass rke2_control;
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout 65;

    # Timeouts para estabilidad en upstreams HTTPS
    proxy_connect_timeout 30s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;
    send_timeout          60s;

    # Resolver DNS (ajusta si tu red es interna o tiene DNS privado)
    resolver 8.8.8.8;

    # Redirecci√≥n HTTP ‚Üí HTTPS
    server {
        listen 80;
        server_name rancher.genialholdinggroup.com argocd.genialholdinggroup.com;

        return 301 https://$host$request_uri;
    }

    # Balanceo HTTPS hacia Ingress NGINX
    server {
        listen 443 ssl http2;
        server_name rancher.genialholdinggroup.com argocd.genialholdinggroup.com;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # üîß Este bloque se completar√° seg√∫n el servicio destino
        # location / {
        #     proxy_pass https://<IP_NODE>:<NODEPORT>;
        #     proxy_ssl_verify off;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    }
}
